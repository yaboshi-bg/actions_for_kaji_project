name: create task from template

on:
# cron形式で決まった時間に実行
#   schedule:
#     - cron: "0 15 * * *"
# 手動実行
  workflow_dispatch:

permissions: write-all
  # issues: write 
  # repository-projects: write

jobs:
  execute:
    runs-on: ubuntu-latest
    steps:
      - name: clone
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: create issues from template
        run: |
            # templateというラベルの付いたissueを取得
            issue_list=`gh issue list -l template --json title,body`
            # テンプレートのissueをループし、必要ならkajiプロジェクト内にタスクを作成する
            echo "templateラベルの付いたissue"
            echo $issue_list
            echo $issue_list | jq -c '.[]' |
            while read -r issue; do
              schedule=$(echo "${issue}" | jq -r '.title' | grep -o -E "^\[\[\[.*?(\]\]\])" | sed -E 's/(\[\s*)|(\s*\])//g')
              schedule_arr=($(echo $schedule | tr " " "\n"))
              if { [ ${schedule_arr[0]} != "*" ] && [ ${schedule_arr[0]} != `date +"%-d"` ]; } || { [ ${schedule_arr[1]} != "*" ] && [ ${schedule_arr[1]} != `date +"%-m"` ]; } || {[ ${schedule_arr[2]} != "*" ] && [ ${schedule_arr[2]} != `date +"%w"` ]; }; then
                continue
              fi
              title_template=$(echo "${issue}" | jq -r '.title' | sed -E "s/^\[\[\[.*?(\]\]\]\s+)//g")
              body=$(echo "${issue}" | jq -r '.body')
              task_title_suffix=`date +"%Y%m%d"`
              echo "作成するissue"
              echo "${title_template}_${task_title_suffix}"
              gh issue create --title "${title_template}_${task_title_suffix}" --body "${body}" -p "kaji"
            done            
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN_KAJI }}
